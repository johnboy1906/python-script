import socket
from concurrent.futures import ThreadPoolExecutor

# Function to scan a single port
def scan_port(ip, port):
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
        sock.settimeout(1)  # Set timeout for the connection attempt
        result = sock.connect_ex((ip, port))
        return port, result

# Function to scan a range of ports
def scan_ports(ip, start_port, end_port):
    open_ports = []
    with ThreadPoolExecutor(max_workers=50) as executor:
        futures = {executor.submit(scan_port, ip, port): port for port in range(start_port, end_port + 1)}
        for future in futures:
            port, result = future.result()
            if result == 0:
                open_ports.append(port)
    return open_ports

# Main execution
if __name__ == "__main__":
    target_ip = input("Enter the target IP address: ")
    start = int(input("Enter the starting port number (e.g., 1): "))
    end = int(input("Enter the ending port number (e.g., 65535): "))
    
    print(f"Scanning {target_ip} from port {start} to {end}...")
    open_ports = scan_ports(target_ip, start, end)
    
    if open_ports:
        print(f"Open ports: {', '.join(map(str, open_ports))}")
    else:
        print("No open ports found.")
